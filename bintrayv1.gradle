apply plugin: 'com.jfrog.bintray'

version = libraryVersion

android.libraryVariants.all { variant ->

    def variantName = variant.name.capitalize()
    def javaDocTaskName = "generate${variantName}Javadoc"

    task(javaDocTaskName, type: Javadoc, dependsOn: "assemble${variantName}") {
        failOnError false
        title = "$name $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }

    task ("generate${variantName}JavadocJar", type: Jar, dependsOn: javaDocTaskName) {
        classifier = javaDocTaskName
        from getTasksByName(javaDocTaskName, true).destinationDir
    }

    task ("generate${variantName}SourcesJar", type: Jar) {
        from variant.javaCompile.source
        classifier = 'sources'
    }

}

afterEvaluate {
    artifacts {
        archives generateReleaseJavadocJar
        archives generateReleaseSourcesJar
    }
}

ext {
    // command-line deployment
    bintrayUserParameterName = 'bintrayUser'
    bintrayKeyParameterName = 'bintrayKey'

    // CI deployment
    bintrayUserEnvVarName = 'BINTRAY_USER'
    bintrayKeyEnvVarName = 'BINTRAY_KEY'
}

bintray {
    user = project.hasProperty(bintrayUserParameterName) ?
            project.property(bintrayUserParameterName) : System.getenv(bintrayUserEnvVarName)

    key = project.hasProperty(bintrayKeyParameterName) ?
            project.property(bintrayKeyParameterName) : System.getenv(bintrayKeyEnvVarName)

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        issueTrackerUrl = libraryIssueTrackerUrl
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ['Apache-2.0']
        labels = libraryLabels
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}
